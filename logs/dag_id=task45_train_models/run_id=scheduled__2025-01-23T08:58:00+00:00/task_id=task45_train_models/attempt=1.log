[2025-01-23T11:04:43.993+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: task45_train_models.task45_train_models scheduled__2025-01-23T08:58:00+00:00 [queued]>
[2025-01-23T11:04:44.018+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: task45_train_models.task45_train_models scheduled__2025-01-23T08:58:00+00:00 [queued]>
[2025-01-23T11:04:44.021+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 1
[2025-01-23T11:04:44.062+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): task45_train_models> on 2025-01-23 08:58:00+00:00
[2025-01-23T11:04:44.082+0000] {standard_task_runner.py:60} INFO - Started process 3124 to run task
[2025-01-23T11:04:44.093+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'task45_train_models', 'task45_train_models', 'scheduled__2025-01-23T08:58:00+00:00', '--job-id', '63', '--raw', '--subdir', 'DAGS_FOLDER/task45_train_models.py', '--cfg-path', '/tmp/tmpujv25sip']
[2025-01-23T11:04:44.095+0000] {standard_task_runner.py:88} INFO - Job 63: Subtask task45_train_models
[2025-01-23T11:04:44.126+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/settings.py:194: DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
  SQL_ALCHEMY_CONN = conf.get("database", "SQL_ALCHEMY_CONN")

[2025-01-23T11:04:44.217+0000] {task_command.py:423} INFO - Running <TaskInstance: task45_train_models.task45_train_models scheduled__2025-01-23T08:58:00+00:00 [running]> on host a8cdec4ae828
[2025-01-23T11:04:44.411+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='task45_train_models' AIRFLOW_CTX_TASK_ID='task45_train_models' AIRFLOW_CTX_EXECUTION_DATE='2025-01-23T08:58:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-01-23T08:58:00+00:00'
[2025-01-23T11:04:44.436+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:54: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'target'] = df_temp['temperature'].shift(1)

[2025-01-23T11:04:44.437+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.441+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.443+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.445+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.450+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.453+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.455+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.456+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.458+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.469+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:54: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'target'] = df_temp['temperature'].shift(1)

[2025-01-23T11:04:44.476+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.478+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.480+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.481+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.483+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.485+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.486+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.490+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.492+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.497+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:54: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'target'] = df_temp['temperature'].shift(1)

[2025-01-23T11:04:44.499+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.500+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.502+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.503+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.505+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.510+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.513+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.515+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.516+0000] {warnings.py:109} WARNING - /opt/***/dags/task45_train_models.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2025-01-23T11:04:44.536+0000] {taskinstance.py:2698} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 433, in _execute_task
    result = execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 199, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 216, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/task45_train_models.py", line 89, in main_code
    score_lr = compute_model_score(LinearRegression(), X, y)
TypeError: compute_model_score() missing 1 required positional argument: 'task_instance'
[2025-01-23T11:04:44.549+0000] {taskinstance.py:1138} INFO - Marking task as FAILED. dag_id=task45_train_models, task_id=task45_train_models, execution_date=20250123T085800, start_date=20250123T110443, end_date=20250123T110444
[2025-01-23T11:04:44.590+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 63 for task task45_train_models (compute_model_score() missing 1 required positional argument: 'task_instance'; 3124)
[2025-01-23T11:04:44.636+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2025-01-23T11:04:44.677+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
